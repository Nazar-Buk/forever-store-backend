import express from "express";
import axios from "axios";

const useRouter = express.Router();

// –õ–û–ö–ê–õ–¨–ù–Ü –õ–Ü–ù–ö–ò –Ω–µ –ø–æ–∫–∞–∑—É—é—Ç—å—Å—è –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º—ñ
const BOT_TOKEN = process.env.TG_BOT_TOKEN;
const CHAT_ID = process.env.TG_CHAT_ID;

// === –ï–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø—Ä–∏–π–æ–º—É —Ñ–æ—Ä–º–∏ ===
useRouter.post("/send-tg-form", async (req, res) => {
  try {
    const {
      firstName,
      lastName,
      email,
      street,
      city,
      state,
      zipCode,
      country,
      phone,
      orderId,
      productsData,
      price,
    } = req.body;

    const countryState = state || "–ü—É—Å—Ç–æ";

    if (
      !firstName ||
      !lastName ||
      !email ||
      !street ||
      !city ||
      !zipCode ||
      !country ||
      !phone ||
      !orderId ||
      !productsData ||
      !price
    ) {
      return res.status(400).json({
        success: false,
        message:
          "These values are required: firstName, lastName, email, street, city, zipCode, country, phone",
      });
    }

    const productList = productsData
      .map((product, ind) => {
        console.log(product, "product");
        return `${ind + 1}. <a href="${product.link}">${product.name}</a>
        <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å:</b> ${product.quantity}
      `;
      })
      .join("\n");

    const text = `
üì© <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Å–∞–π—Ç—É: BUK SKLAD</b>

üë§ <b>–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è :</b> ‚Ññ${orderId} 
üë§ <b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä:</b> ${productList}
üë§ <b>–¶—ñ–Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b> ${price}$
üë§ <b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b> –ü—ñ–∑–Ω—ñ—à–µ –∑—Ä–æ–±–ª—é
üë§ <b>–Ü–º'—è:</b> ${firstName} ${lastName}
üìß <b>Email:</b> ${email}
üè† <b>–ê–¥—Ä–µ—Å–∞:</b> 
--- –í—É–ª: ${street},
--- –ú—ñ—Å—Ç–æ: ${city},
--- –®—Ç–∞—Ç: ${countryState},
--- –ü–æ—à—Ç–æ–≤–∏–π –Ü–Ω–¥–µ–∫—Å: ${zipCode},
--- –ö—Ä–∞—ó–Ω–∞: ${country}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}

`;

    console.log(text, "text");

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram
    const response = await axios.post(
      `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,
      {
        chat_id: CHAT_ID,
        text,
        parse_mode: "HTML",
      }
    );

    // response.data.ok === true, —è–∫—â–æ Telegram –ø—Ä–∏–π–Ω—è–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if (response.data.ok) {
      res
        .status(200)
        .json({ success: true, message: "Form was sent to Telegram" });
    } else {
      res.status(500).json({ success: false, error: "Form was not sended !" });
    }
  } catch (error) {
    console.error("‚ùå Error:", error.response?.data || error.message);
    res
      .status(500)
      .json({ success: false, message: error.response?.data || error.message });
  }
});

export default useRouter;
